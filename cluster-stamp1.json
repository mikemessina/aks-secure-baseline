{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.5",
    "parameters": {
        "targetVnetResourceId": {
            "type": "string",
            "minLength": 79,
            "metadata": {
                "description": "The regional network spoke VNet Resource ID that the cluster will be joined to"
            }
        },
        "clusterAdminAadGroupObjectId": {
            "type": "string",
            "metadata": {
                "description": "Azure AD Group in the identified tenant that will be granted the highly privileged cluster-admin role."
            }
        },
        "k8sControlPlaneAuthorizationTenantId": {
            "type": "string",
            "metadata": {
                "description": "Your AKS control plane Cluster API authentication tenant"
            }
        },
        "clusterAuthorizedIPRanges": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "IP ranges authorized to contact the Kubernetes API server. Passing an empty array will result in no IP restrictions. If any are provided, remember to also provide the public IP of the egress Azure Firewall otherwise your nodes will not be able to talk to the API server (e.g. Flux)."
            }
        },
        "location": {
            "defaultValue": "eastus2",
            "type": "string",
            "allowedValues": [
                "australiaeast",
                "canadacentral",
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "germanywestcentral",
                "northeurope",
                "southafricanorth",
                "southcentralus",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia"
            ],
            "metadata": {
                "description": "AKS Service, Node Pool, and supporting services (KeyVault, App Gateway, etc) region. This needs to be the same region as the vnet provided in these parameters."
            }
        },
        "kubernetesVersion": {
            "defaultValue": "1.20.5",
            "type": "string"
        }
    },
    "variables": {
        "subRgUniqueString": "[uniqueString('akscl', subscription().subscriptionId, resourceGroup().id)]",
        "managedIdentityOperatorRole": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/f1a07417-d97a-45cb-824c-7a7467783830')]",
        "nodeResourceGroupName": "[concat('rg-', variables('clusterName'), '-nodepools')]",
        "clusterName": "[concat('aks-', variables('subRgUniqueString'))]",
        "logAnalyticsWorkspaceName": "[concat('la-', variables('clusterName'))]",
        "defaultAcrName": "[concat('acraks', variables('subRgUniqueString'))]",
        "vnetNodePoolSubnetResourceId": "[concat(parameters('targetVnetResourceId'), '/subnets/snet-clusternodes')]",
        "agwName": "[concat('apw-', variables('clusterName'))]",
        "clusterControlPlaneIdentityName": "[concat('mi-', variables('clusterName'), '-controlplane')]",
        "keyVaultName": "[concat('kv-', variables('clusterName'))]"
    },
    "resources": [
        {
            "name": "[variables('clusterControlPlaneIdentityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "location": "[parameters('location')]",
            "comments": "The control plane identity used by the cluster. Used for networking access (VNET joining and DNS updating)"
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "mi-appgateway-frontend",
            "location": "[parameters('location')]",
            "comments": "User Managed Identity that App Gateway is assigned. Used for Azure Key Vault Access."
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "podmi-ingress-controller",
            "location": "[parameters('location')]",
            "comments": "User Managed Identity for the cluster's ingress controller pods. Used for Azure Key Vault Access."
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2021-02-01",
            "name": "[variables('clusterName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
            ],
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "dnsPrefix": "[uniqueString(subscription().subscriptionId, resourceGroup().id, variables('clusterName'))]",
                "agentPoolProfiles": [
                    {
                        "name": "npsystem",
                        "count": 3,
                        "vmSize": "Standard_DS2_v2",
                        "osDiskSizeGB": 80,
                        "osDiskType": "Ephemeral",
                        "osType": "Linux",
                        "minCount": 3,
                        "maxCount": 4,
                        "vnetSubnetID": "[variables('vnetNodePoolSubnetResourceId')]",
                        "enableAutoScaling": true,
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "scaleSetPriority": "Regular",
                        "scaleSetEvictionPolicy": "Delete",
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "maxPods": 30,
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "upgradeSettings": {
                            "maxSurge": "33%"
                        }
                    },
                    {
                        "name": "npuser01",
                        "count": 2,
                        "vmSize": "Standard_DS3_v2",
                        "osDiskSizeGB": 120,
                        "osDiskType": "Ephemeral",
                        "osType": "Linux",
                        "minCount": 2,
                        "maxCount": 5,
                        "vnetSubnetID": "[variables('vnetNodePoolSubnetResourceId')]",
                        "enableAutoScaling": true,
                        "type": "VirtualMachineScaleSets",
                        "mode": "User",
                        "scaleSetPriority": "Regular",
                        "scaleSetEvictionPolicy": "Delete",
                        "orchestratorVersion": "[parameters('kubernetesVersion')]",
                        "enableNodePublicIP": false,
                        "maxPods": 30,
                        "availabilityZones": [
                            "1",
                            "2",
                            "3"
                        ],
                        "upgradeSettings": {
                            "maxSurge": "33%"
                        }
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "msi"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": false
                    },
                    "omsagent": {
                        "enabled": true,
                        "config": {
                            "logAnalyticsWorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
                        }
                    },
                    "aciConnectorLinux": {
                        "enabled": false
                    },
                    "azurepolicy": {
                        "enabled": true,
                        "config": {
                            "version": "v2"
                        }
                    }
                },
                "nodeResourceGroup": "[variables('nodeResourceGroupName')]",
                "enableRBAC": true,
                "enablePodSecurityPolicy": false,
                "maxAgentPools": 2,
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "outboundType": "userDefinedRouting",
                    "loadBalancerSku": "standard",
                    "loadBalancerProfile": "[json('null')]",
                    "serviceCidr": "172.16.0.0/16",
                    "dnsServiceIP": "172.16.0.10",
                    "dockerBridgeCidr": "172.18.0.1/16"
                },
                "aadProfile": {
                    "managed": true,
                    "enableAzureRBAC": false,
                    "adminGroupObjectIDs": [
                        "[parameters('clusterAdminAadGroupObjectId')]"
                    ],
                    "tenantID": "[parameters('k8sControlPlaneAuthorizationTenantId')]"
                },
                "autoScalerProfile": {
                    "balance-similar-node-groups": "false",
                    "expander": "random",
                    "max-empty-bulk-delete": "10",
                    "max-graceful-termination-sec": "600",
                    "max-node-provision-time": "15m",
                    "max-total-unready-percentage": "45",
                    "new-pod-scale-up-delay": "0s",
                    "ok-total-unready-count": "3",
                    "scale-down-delay-after-add": "10m",
                    "scale-down-delay-after-delete": "20s",
                    "scale-down-delay-after-failure": "3m",
                    "scale-down-unneeded-time": "10m",
                    "scale-down-unready-time": "20m",
                    "scale-down-utilization-threshold": "0.5",
                    "scan-interval": "10s",
                    "skip-nodes-with-local-storage": "true",
                    "skip-nodes-with-system-pods": "true"
                },
                "apiServerAccessProfile": {
                    "authorizedIPRanges": "[parameters('clusterAuthorizedIPRanges')]",
                    "enablePrivateCluster": false
                },
                "podIdentityProfile": {
                    "enabled": false, /* This feature is currently in preview and will eventually replace the aad-pod-identity configuration set up by hand in this reference implementation */
                    "userAssignedIdentities": [],
                    "userAssignedIdentityExceptions": []
                }
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('clusterControlPlaneIdentityName'))]": {}
                }
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities/providers/roleAssignments",
            "name": "[concat('podmi-ingress-controller', '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('managedIdentityOperatorRole')))]",
            "apiVersion": "2018-09-01-preview",
            "comments": "Grant the AKS cluster with Manage Identity Operator role permissions over the managed identity used for the ingress controller.  Allows it to be assigned to the underlying VMSS.",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('managedIdentityOperatorRole')]",
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('clusterName')), '2020-11-01').identityProfile.kubeletidentity.objectId]",
                "principalType": "ServicePrincipal"
            }
        }
    ],
    "outputs": {
        "aksClusterName": {
            "type": "string",
            "value": "[variables('clusterName')]"
        },
        "agwName": {
            "type": "string",
            "value": "[variables('agwName')]"
        },
        "aksIngressControllerPodManagedIdentityResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'podmi-ingress-controller')]"
        },
        "aksIngressControllerPodManagedIdentityClientId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities','podmi-ingress-controller'), '2018-11-30').clientId]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        },
        "containerRegistryName": {
            "type": "string",
            "value": "[variables('defaultAcrName')]"
        }
    }
}